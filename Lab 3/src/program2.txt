
get	r0	7
add	r0	r0	# r0 loop counter i = 64-93
ld	r1	r0	#loop: avail reg r1-7, r1 = mem[i] LSW
get	r2	1
add	r2	r0	# r2 = r0+1;
ld	r2	r0	# r2 = mem[i+1] MSW
get	r3	0
add	r3	r1	# r3 = LSW
shft 	r3 1	3
shft	r3 1	3
shft	r3 1	1	# r3 = LSW>>7 = b7
get	r4	0
add	r4	r2	# r4 = MSW
shft	r4 0	3
shft	r4 0	3
shft	r4 0	1
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = MSW<<7>>7 = b8
xor	r3	r4	# r3 = ^b8:7
get	r4	0
add	r4	r2	# r4 = MSW
shft	r4 0	3
shft	r4 0	3
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = MSW<<6>>7 = b9
xor	r3	r4	# r3 = ^b9:7
get	r4	0
add	r4	r2	# r4 = MSW
shft	r4 0	3
shft	r4 0	2
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = MSW<<5>>7 = b10
xor	r3	r4	# r3 = ^b10:7
get	r4	0
add	r4	r2	# r4 = MSW
shft	r4 0	3
shft	r4 0	1
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = MSW<<4>>7 = b11
xor	r3	r4	# r3 = ^b11:7
get	r4	0
add	r4	r2	# r4 = MSW
shft	r4 0	3
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = MSW<<3>>7 = b12
xor	r3	r4	# r3 = ^b12:7
get	r4	0
add	r4	r2	# r4 = MSW
shft	r4 0	2
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = MSW<<2>>7 = b13
xor	r3	r4	# r3 = ^b13:7
get	r4	0
add	r4	r2	# r4 = MSW
shft	r4 0	2
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = MSW<<1>>7 = b14
xor	r3	r4	# r3 = ^b14:7
get	r7	0	# r7 = err
add	r7	r3
shft	r7 0	3	# r7 = err[3] = ^b14:7
get	r3	0
add	r3	r1	# r3 = LSW
shft	r3 0	3
shft	r3 0	1
shft	r3 1	3
shft	r3 1	3
shft 	r3 1	1	# r3 = LSW<<4>>7 = b3
get	r4	0
add	r4	r1
shft	r4 0	3
shft	r4 1	3
shft	r4 1	3
shft 	r4 1	1	# r4 = LSW<<3>>7 = b4
xor	r3	r4	# r3 = ^b4:3
get	r4	0
add	r4	r1
shft	r4 0	2
shft	r4 1	3
shft	r4 1	3
shft 	r4 1	1	# r4 = LSW<<2>>7 = b5
xor	r3	r4	# r3 = ^b5:3
get	r4	0
add	r4	r1
shft	r4 0	1
shft	r4 1	3
shft	r4 1	3
shft 	r4 1	1	# r4 = LSW<<1>>7 = b6
xor	r3	r4	# r3 = ^b6:3
get	r4	0
add	r4	r2
shft	r4 0	3
shft	r4 0	1
shft	r4 1	3
shft	r4 1	3
shft 	r4 1	1	# r4 = MSW<<4>>7 = b11
xor	r3	r4	# r3 = b11 ^ ^b6:3
get	r4	0
add	r4	r2
shft	r4 0	3
shft	r4 1	3
shft	r4 1	3
shft 	r4 1	1	# r4 = MSW<<3>>7 = b12
xor	r3	r4	# r3 = ^b12:11 ^ ^b6:3
get	r4	0
add	r4	r2
shft	r4 0	2
shft	r4 1	3
shft	r4 1	3
shft 	r4 1	1	# r4 = MSW<<2>>7 = b13
xor	r3	r4	# r3 = ^b13:11 ^ ^b6:3
get	r4	0
add	r4	r2
shft	r4 0	1
shft	r4 1	3
shft	r4 1	3
shft 	r4 1	1	# r4 = MSW<<1>>7 = b14
xor	r3	r4	# r3 = ^b14:11 ^ ^b6:3
shft	r3 0	2
add	r7	r6	# r7 = err[3:2]
get	r3	0
add	r3	r1	# r3 = LSW
shft	r3 0	3
shft	r3 0	3
shft	r3 1	3
shft	r3 1	3
shft	r3 1	1	# r3 = LSW<<6>>7 = b1
get	r4	0
add	r4	r1	# r4 = LSW
shft	r4 0	3
shft	r4 0	2
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = LSW<<5>>7 = b2
xor	r3	r4	# r3 = ^b 2,1
get	r4	0
add	r4	r1	# r4 = LSW
shft	r4 0	2
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = LSW<<2>>7 = b5
xor	r3	r4	# r3 = ^b 5,2,1
get	r4	0
add	r4	r1	# r4 = LSW
shft	r4 0	1
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = LSW<<1>>7 = b6
xor	r3	r4	# r3 = ^b 6,5,2,1
get	r4	0
add	r4	r2	# r4 = MSW
shft	r4 0	3
shft	r4 0	3
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = MSW<<6>>7 = b9
xor	r3	r4	# r3 = ^b 9,6,5,2,1
get	r4	0
add	r4	r2	# r4 = MSW
shft	r4 0	3
shft	r4 0	2
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = MSW<<5>>7 = b10
xor	r3	r4	# r3 = ^b 10,9,6,5,2,1
get	r4	0
add	r4	r2	# r4 = MSW
shft	r4 0	2
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = MSW<<2>>7 = b13
xor	r3	r4	# r3 = ^b 13,10,9,6,5,2,1
get	r4	0
add	r4	r2	# r4 = MSW
shft	r4 0	1
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = MSW<<1>>7 = b14
xor	r3	r4	# r3 = ^b 14,13,10,9,6,5,2,1
shft	r3 0	1
add	r7	r6	# r7 = err[3:1]
get	r3	0
add	r3	r1	# r3 = LSW
shft	r3 0 	3
shft	r3 0 	3
shft	r3 0 	1	# r3 = LSW<<7 = b0
get	r4	0
add	r4	r1	# r4 = LSW
shft	r4 0	3
shft	r4 0	2
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = LSW<<5>>7 = b2
xor	r3	r4	# r3 = ^b 2,0
get	r4	0
add	r4	r1	# r4 = LSW
shft	r4 0	3
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = LSW<<3>>7 = b4
xor	r3	r4	# r3 = ^b 4,2,0
get	r4	0
add	r4	r1	# r4 = LSW
shft	r4 0	1
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = LSW<<1>>7 = b6
xor	r3	r4	# r3 = ^b 6,4,2,0
get	r4	0
add	r4	r2	# r4 = MSW
shft	r4 0	3
shft	r4 0	3
shft	r4 0	1
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = MSW<<7>>7 = b8
xor	r3	r4	# r3 = ^b 8,6,4,2,0
get	r4	0
add	r4	r2	# r4 = MSW
shft	r4 0	3
shft	r4 0	2
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = MSW<<5>>7 = b10
xor	r3	r4	# r3 = ^b 10,8,6,4,2,0
get	r4	0
add	r4	r2	# r4 = MSW
shft	r4 0	3
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = MSW<<3>>7 = b12
xor	r3	r4	# r3 = ^b 12,10,8,6,4,2,0
get	r4	0
add	r4	r2	# r4 = MSW
shft	r4 0	1
shft	r4 1	3
shft	r4 1	3
shft	r4 1	1	# r4 = MSW<<1>>7 = b14
xor	r3	r4	# r3 = ^b 14,12,10,8,6,4,2,0
add	r7	r3	# r7 = err[3:0]
get 	r3	0	# r3 = off = 0
get	r4	0	# r4 = mapping = 1
get	r5	0
add	r5	r7	# r5 = err
shft	r5 1	3	# r5 = err/8, r5 = 0 if err < 8
jz 50      #+2
get	r5	1	# r5 = 1 if err >= 8
get	r6	4
add	r6	r6	# r6 = 8
xor	r6	r7	# r6 = 0 if err = 8
jz	50        #+2
get	r6	1	# r6 = 1 if err != 8
xor	r5	r6
get	r6	1
xor	r5	r6	# r5 = err>8
jz	50        #+3		# if r5 = 0, i.e. err<=8, off remains 0
get	r3	4
add	r3	r3	# if r5, i.e. err>8, set off to 8
get	r5	0	# r5 = counter = i=0
get	r6	1	# loop2:
add	r6	r5
add	r6	r3	# r6 = i+off+1
xor	r6	r7	# condition: r6=0 if i+off+1==err
jz	50      # go to end_loop2
shft	r4 0	1	# map<<1
get	r6	1
add	r5	r6
jnz	50      # go to loop2
get	r5	4	# end_loop2:
add	r5	r5	# r5 = 8
xor	r3	r5	# r3 = 0 if off==8, means change MSW
jz	50      #+4, if
xor	r1	r4	# else if: r3 nonzero, change LSW
get	r3	1
jnz	51      #+1, end_if
xor	r2	r4	# if: change MSW
get	r3	0	# end_if; now data is correct in r1r2
add	r3	r1	# r3 = LSW
shft	r3 0	3
shft	r3 0	2
shft	r3 1	3
shft	r3 1	3
shft	r3 1	1	# r3 = LSW<<5>>7 = b2
get	r4	0
add	r4	r1	# r4 = LSW
shft	r4 0	1
shft	r4 1	3
shft	r4 1	1	# r4 = LSW<<1>>5 = b6:4
shft	r4 0	1
add	r3	r4	# r3 = b 6:4,2
get	r4	0
add	r4	r2	# r4 = MSW
shft	r4 0	3
shft	r4 0	1
shft	r4 1	3
shft	r4 1	1	# r4 = MSW<<4>>4 = b11:8
add	r3	r4	# r3 = b 11:8, 6:4, 2, this is original LSW
get	r4	2	# r4 = 30
add	r4	r0	# r4 = i+30
st	r3	r4	# mem[i+30] = original LSW
get	r3	0
add	r3	r2
shft	r3 0	1
shft	r3 1	3
shft	r3 1	2	# r3 = MSW<<1>>5 = b14:12, this is original MSW
get	r5	1
add	r4	r5	# r4 = i+31
st	r3	r4	# mem[i+31] = original MSW
add	r0	r5	# i++
get	r6	7	# end loop, checking counter, r6 = 32
add	r6	r6	# r6 = 64
get	r7	2	# r7 = 30
add	r7	r6	# r7 = 94
get 	r6	1	# r6 = 1
add	r0	r6	# r0 = r0+1; i++
get	r6	0
add	r6	r0	# r6 = cur i = i+1
xor	r6	r7	# check if i = 94, r6=0 if equal
jnz	50      # go to loop