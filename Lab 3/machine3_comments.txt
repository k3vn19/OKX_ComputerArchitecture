Program 3:


110_000_110 # get     r0      6          
110_001_111 # get     r1      7        
011_000_001 # add     r0      r1     
001_000_000 # st      r0      r0      
111_000_1_11 # shft    r0  1   3       
111_000_1_01 # shft    r0  1   1
110_001_000 # get     r1      0       
110_010_000 # get     r2      0       


110_011_000 # get     r3      0       
loop1: #(available registers: r4~r7)
110_100_000 # get     r4      0       
110_101_110 # get     r5      6       
011_101_011 # add     r5      r3      
000_101_101 # ld      r5      r5      


  # hardcoding loop2
                        #(available registers: r6,r7)
110_110_000 # get     r6      0       
011_110_101 # add     r6      r5      
111_110_0_11 # shft    r6  0   3       
111_110_0_01 # shft    r6  0   1
010_110_000 # xor     r6      r0      
110_111_100 # get     r7      4       
101_110_111 # jnz     r6      r7      
110_111_001 # get     r7      1          
011_001_111 # add     r1      r7      
011_100_111 # add     r4      r7      


110_110_000 # get     r6      0       
011_110_101 # add     r6      r5      
111_110_1_01 # shft    r6  1   1
111_110_0_11 # shft    r6  0   3       
111_110_0_01 # shft    r6  0   1
010_110_000 # xor     r6      r0      
110_111_100 # get     r7      4       
101_110_111 # jnz     r6      r7      
110_111_001 # get     r7      1          
011_001_111 # add     r1      r7      
011_100_111 # add     r4      r7      


110_110_000 # get     r6      0       
011_110_101 # add     r6      r5      
111_110_1_10 # shft    r6  1   2
111_110_0_11 # shft    r6  0   3       
111_110_0_01 # shft    r6  0   1
010_110_000 # xor     r6      r0      
110_111_100 # get     r7      4       
101_110_111 # jnz     r6      r7      
110_111_001 # get     r7      1
011_001_111 # add     r1      r7      
011_100_111 # add     r4      r7      


110_110_000 # get     r6      0       
011_110_101 # add     r6      r5      
111_110_1_11 # shft    r6  1   3
111_110_0_11 # shft    r6  0   3       
111_110_0_01 # shft    r6  0   1
010_110_000 # xor     r6      r0      
110_111_100 # get     r7      4       
101_110_111 # jnz     r6      r7      
110_111_001 # get     r7      1          
011_001_111 # add     r1      r7      
011_100_111 # add     r4      r7      


110_110_000 # get     r6      0       
011_110_101 # add     r6      r5      
111_110_1_11 # shft    r6  1   3
111_110_1_01 # shft    r6  1   1
111_110_0_11 # shft    r6  0   3       
111_110_0_01 # shft    r6  0   1
010_110_000 # xor     r6      r0      
110_111_100 # get     r7      4       
101_110_111 # jnz     r6      r7      
110_111_001 # get     r7      1
011_001_111 # add     r1      r7      
011_100_111 # add     r4      r7      
// end of hardcoded loop2


110_110_101 # get     r6      5       
100_100_110 # jz      r4      r6      
110_111_001 # get     r7      1
011_010_111 # add     r2      r7      


110_100_111 # get     r4      7       
110_101_001 # get     r5      1       
011_011_101 # add     r3      r5      
110_101_000 # get     r5      0       
011_101_011 # add     r5      r3      
010_101_100 # xor     r5      r4      
end_loop1:


// ctb, cto correctly calculated, storing them; r3=32 now
110_100_110 # get     r4      6       
011_100_011 # add     r4      r3      
011_100_011 # add     r4      r3      
001_001_100 # st      r1      r4      
110_011_000 # get     r3      0       
011_100_011 # add     r4      r3      
001_010_100 # st      r2      r4      


//calculating cts (available registers: r2~r7); r1 = cts = ctb
110_010_000 # get     r2      0       
loop3: (available registers: r3~r7)
110_011_110 # get     r3      6
011_011_010 # add     r3      r2      
110_100_001 # get     r4      1
011_100_011 # add     r4      r3      
000_011_011 # ld      r3      r3      
000_100_100 # ld      r4      r4      


// hardcoded loop4 (available registers: r5~r7)
110_101_000 # get     r5      0
011_101_011 # add     r5      r3      
111_101_1_11 # shft    r5  1   3       
111_101_1_11 # shft    r5  1   3
111_101_1_01 # shft    r5  1   1
110_110_000 # get     r6      0
011_110_100 # add     r6      r4      
111_110_0_11 # shft    r6  0   3
111_110_0_10 # shft    r6  0   2
111_110_1_11 # shft    r6  1   3       
111_110_1_01 # shft    r6  1   1
011_110_101 # add     r6      r5      
010_110_000 # xor     r6      r0      
110_101_001 # get     r5      1
011_001_101 # add     r1      r5      


110_101_000 # get     r5      0
011_101_011 # add     r5      r3      
111_101_1_11 # shft    r5  1   3       
111_101_1_11 # shft    r5  1   3 
110_110_000 # get     r6      0
011_110_100 # add     r6      r4      
111_110_0_11 # shft    r6  0   3
111_110_0_11 # shft    r6  0   3
111_110_1_11 # shft    r6  1   3       
111_110_1_01 # shft    r6  1   1 
011_110_101 # add     r6      r5      
010_110_000 # xor     r6      r0      
110_101_001 # get     r5      1
011_001_101 # add     r1      r5      


110_101_000 # get     r5      0
011_101_011 # add     r5      r3      
111_101_1_11 # shft    r5  1   3       
111_101_1_10 # shft    r5  1   2 
110_110_000 # get     r6      0
011_110_100 # add     r6      r4      
111_110_0_11 # shft    r6  0   3
111_110_0_11 # shft    r6  0   3
111_110_0_01 # shft    r6  0   1
111_110_1_11 # shft    r6  1   3       
111_110_1_01 # shft    r6  1   1
011_110_101 # add     r6      r5      
010_110_000 # xor     r6      r0      
110_101_001 # get     r5      1
011_001_101 # add     r1      r5      


110_011_111 # get     r3      7      
110_100_001 # get     r4      1
011_010_100 # add     r2      r4      
110_100_001 # get     r4      1
011_100_010 # add     r4      r2      
010_100_011 # xor     r4      r3      
end_loop3:


// cts correctly calculated, storing it; r3=32 now
110_100_110 # get     r4      6     
011_100_011 # add     r4      r3      
011_100_011 # add     r4      r3      
110_011_001 # get     r3      1
011_100_011 # add     r4      r3      
011_100_011 # add     r4      r3      
001_001_100 # st      r1      r4      
