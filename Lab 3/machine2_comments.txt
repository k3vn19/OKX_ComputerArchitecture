get        r0        0        #get value 0 from mem[200] into r0
        #r0 is i = 0 start of for loop
loop:
#assign d_out[11:5] = d_in[15:9]
#d_out[5] = d_in[9]
110_001_010 # get        r1        2                
110_010_001 # get        r2        1                
011_001_010 # add        r1        r2                
011_001_010 # add        r1        r2                
000_010_001 # ld        r2        r1                
000_001_010 # ld        r1        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
111_010_1_11 # shft        r2        1        3        
110_011_000 # get        r3        0                
010_011_010 # xor        r3        r2                
#d_out[6] = d_in[10]                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_01 # shft        r2        1        1        
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
111_010_1_10 # shft        r2        1        2        
010_011_010 # xor        r3        r2                
#d_out[7] = d_in[11]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_10 # shft        r2        1        2        
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
111_010_1_01 # shft        r2        1        1        
010_011_010 # xor        r3        r2                
#d_out[8] = d_in[12]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_11 # shft        r2        1        3        
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
010_011_010 # xor        r3        r2                
110_010_100 # get        r2        4                
sr        r3        r2                #store d_out LSW into data mem


#d_out[9]= d_in[13]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
110_011_000 # get        r3        0                
010_011_010 # xor        r3        r2                


#d_out[10] = d_in[14]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_10 # shft        r2        0        2        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_11 # shft        r2        0        3        
010_011_010 # xor        r3        r2                


#d_out[11] = d_in[15]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_01 # shft        r2        0        1        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_01 # shft        r2        0        1        
111_010_0_01 # shft        r2        0        1        
010_011_010 # xor        r3        r2                
110_010_011 # get        r2        3                
000_100_010 # ld        r4        r2                
000_010_100 # ld        r2        r4                
011_010_100 # add        r2        r4                
sr        r3        r2                # store d_out MSW into data mem[125]




#assign p8 = d_in[   8];           // parse 4 received parity bits
110_100_010 # get        r4        2                
110_010_001 # get        r2        1                
011_100_010 # add        r4        r2                
011_100_010 # add        r4        r2                
011_100_010 # add        r4        r2                
000_010_100 # ld        r2        r4                
000_001_010 # ld        r1        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
110_100_000 # get        r4        0                
011_101_100 # add        r5        r4                
010_010_101 # xor        r2        r5                




#assign d_out[ 4:2] = d_in[ 7:5];
#d_out[2] = d_in[5];
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_01 # shft        r2        0        1        
010_010_011 # xor        r2        r3                
#d_out[3] = d_in[6]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_10 # shft        r2        0        2        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_10 # shft        r2        0        2        
010_010_011 # xor        r2        r3                
#d_out[4] = d_in[7]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_11 # shft        r2        0        3        
010_010_011 # xor        r2        r3                


#assign p4 = d_in[4]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_11 # shft        r2        1        3        
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
111_010_1_01 # shft        r2        1        1        
010_010_101 # xor        r2        r5                


#assign d_out[1] = d_in[3]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_10 # shft        r2        1        2        
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
010_010_011 # xor        r2        r3                
110_010_011 # get        r2        3                
000_101_010 # ld        r5        r2                
110_010_001 # get        r2        1                
011_101_010 # add        r5        r2                
000_010_101 # ld        r2        r5                
sr        r3        r5                #store d_out LSW into data mem[125]




#assign p2 = d_in[2]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_01 # shft        r2        1        1        
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
010_010_101 # xor        r2        r5                


#assign p1 = d_in[1]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
010_010_101 # xor        r2        r5
110_011_100 # get        r3        4                
110_100_001 # get        r4        1                
011_100_011 # add        r4        r3                
011_100_011 # add        r4        r3                
sr        r5        r4                #store r5  in mem[126]






        


//PROGRAM 1 CODE
                                #compute s8


000_001_001 # ld        r1        r1                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_10 # shft        r2        1        2        
110_011_000 # get        r3        0                
010_011_001 # xor        r3        r1                
111_011_0_11 # shft        r3        0        3        
111_011_0_11 # shft        r3        0        3
111_011_1_11 # shft        r3        1        3        
111_011_1_11 # shft        r3        1        3
111_011_1_01 # shft        r3        1        1
010_011_010 # xor        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                
110_001_001 # get        r1        1                
011_001_000 # add        r1        r0                
000_001_001 # ld        r1        r1                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_01 # shft        r2        0        1        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_10 # shft        r2        0        2        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                






                                # SAVE s8 TO MEM[60]
110_111_010 # get        r7        2                
000_111_111 # ld        r7        r7                
011_111_111 # add        r7        r7                
001_011_111 # st        r3        r7                




                                # COMPUTE s4
110_001_000 # get        r1        0                
011_001_000 # add        r1        r0                
000_001_001 # ld        r1        r1                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_10 # shft        r2        1        2        
110_011_000 # get        r3        0                
010_011_001 # xor        r3        r1                
111_011_0_11 # shft        r3        0        3        
111_011_0_11 # shft        r3        0        3
111_011_1_11 # shft        r3        1        3        
111_011_1_11 # shft        r3        1        3
111_011_1_01 # shft        r3        1        1
010_011_010 # xor        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                
110_001_001 # get        r1        1                
011_001_000 # add        r1        r0                
000_001_001 # ld        r1        r1                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_0_01 # shft        r2        0        1
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_0_10 # shft        r2        0        2
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                


                                # SAVE P4 TO MEM[61]
110_110_001 # get        r6        1                
011_111_110 # add        r7        r6                
001_011_111 # st        r3        r7                




                                # COMPUTE s2
110_001_000 # get        r1        0                
011_001_000 # add        r1        r0                
000_001_001 # ld        r1        r1                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_10 # shft        r2        1        2        
110_011_000 # get        r3        0                
010_011_001 # xor        r3        r1                
111_011_0_11 # shft        r3        0        3        
111_011_0_11 # shft        r3        0        3
111_011_1_11 # shft        r3        1        3        
111_011_1_11 # shft        r3        1        3
111_011_1_01 # shft        r3        1        1
010_011_010 # xor        r3        r2                
110_001_001 # get        r1        1                
011_001_000 # add        r1        r0                
000_001_001 # ld        r1        r1                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_01 # shft        r2        0        1        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_10 # shft        r2        0        2        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_0_01 # shft        r2        0        1        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_0_10 # shft        r2        0        2        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                




# SAVE s2 TO MEM[62]
011_111_110 # add        r7        r6                
001_011_111 # st        r3        r7                
                
                                # COMPUTE s1
110_001_000 # get        r1        0                
011_001_000 # add        r1        r0                
000_001_001 # ld        r1        r1                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_10 # shft        r2        1        2        
110_011_000 # get        r3        0                
010_011_001 # xor        r3        r1                
111_011_0_11 # shft        r3        0        3        
111_011_0_11 # shft        r3        0        3
111_010_0_01 # shft        r2        0        1
111_011_1_11 # shft        r3        1        3        
111_011_1_11 # shft        r3        1        3
111_011_1_01 # shft        r3        1        1
010_011_010 # xor        r3        r2                
110_001_001 # get        r1        1                
011_001_000 # add        r1        r0                
000_001_001 # ld        r1        r1                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_01 # shft        r2        0        1        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_0_01 # shft        r2        0        1
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
010_011_010 # xor        r3        r2                


# SAVE s1 TO MEM[63]
011_111_110 # add        r7        r6                
001_011_111 # st        r3        r7                


                                # CONCATENATE BITS
110_001_000 # get        r1        0                
011_001_000 # add        r1        r0                
000_001_001 # ld        r1        r1                
110_011_000 # get        r3        0                
111_011_0_11 # shft        r3        0        3        
111_011_0_01 # shft        r3        0        1
110_001_001 # get        r1        1                
011_001_000 # add        r1        r0                
000_001_001 # ld        r1        r1                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_11 # shft        r2        0        3        
011_011_011 # add        r3        r3                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_01 # shft        r2        0        1        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_10 # shft        r2        0        2        
011_011_010 # add        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_10 # shft        r2        0        2        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_10 # shft        r2        0        2        
011_011_011 # add        r3        r3                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_01 # shft        r2        0        1        
011_011_011 # add        r3        r3                




110_111_010 # get        r7        2                
000_111_111 # ld        r7        r7                
011_111_000 # add        r7        r0                
001_011_111 # st         r3        r7                




# concatenating bits for LSW of output
110_111_010 # get        r7        2                
000_111_111 # ld        r7        r7                
011_111_111 # add        r7        r7                
000_111_011 # ld        r7        r3                
111_011_0_11 # shft        r3        0        3        
111_011_0_11 # shft        r3        0        3
111_011_0_01 # shft        r3        0        1
110_001_001 # get        r1        1                
011_001_000 # add        r1        r0                
000_001_001 # ld        r1        r1                
110_010_000 # get        r2        0                
010_010_010 # xor        r2        r2                
111_010_0_11 # shft        r2        0        3        
111_010_0_01 # shft        r2        0        1        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
011_011_010 # add        r3        r2                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_0_10 # shft        r2        0        2
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_11 # shft        r2        0        3        
111_010_0_10 # shft        r2        0        2
011_011_011 # add        r3        r3                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_11 # shft        r2        0        3        
111_010_0_01 # shft        r2        0        1
011_011_010 # add        r3        r2                
                                # store mem address of P4 into r7
110_110_001 # get        r6        1                
011_111_110 # add        r7        r6                
000_111_010 # ld        r7        r2                
111_010_0_11 # shft        r2        0        3        
011_011_010 # add        r3        r2                
110_001_001 # get        r1        1                
011_001_000 # add        r1        r0                
000_001_001 # ld        r1        r1                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
111_010_1_11 # shft        r2        1        3        
111_010_1_10 # shft        r2        1        2
011_011_010 # add        r3        r2                
011_111_110 # add        r7        r6                
000_111_010 # ld        r7        r2                
111_010_0_01 # shft        r2        0        1        
011_011_010 # add        r3        r2                
011_111_110 # add        r7        r6                
000_111_010 # ld        r7        r2                
011_011_010 # add        r3        r2                




110_111_010 # get        r7        2                
000_111_111 # ld        r7        r7                
011_111_110 # add        r7        r6                
011_111_000 # add        r7        r0                
001_011_111 # st        r3        r7                








#assign err = {s8^p8,s4^p4,s2^p2,s1^p1};


#s1^p1
# word at mem[126] is in r4
#isolate p1
000_001_100 # ld        r1        r4                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
110_011_000 # get        r3        0                
010_010_011 # xor        r2        r3                
#isolate s1
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
010_010_011 # xor        r2        r3                


#s2^p2
#isolate s2
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
010_010_011 # xor        r2        r3                
#isolate p2
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
010_010_011 # xor        r2        r3                


#s4^p4
#isolate s4
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
010_010_011 # xor        r2        r3                
#isolate p4
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
010_010_011 # xor        r2        r3                


#s8^p8
#isolate p8
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
010_010_011 # xor        r2        r3                
#isolate s8
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
010_010_011 # xor        r2        r3                
#store err into mem 126
sr        r3        r4




#always_comb for (int k = 1; k < 16; k++)
#get err from mem into r4
110_100_100 # get        r4        4                
110_101_001 # get        r5        1                
011_101_100 # add        r5        r4                
011_101_100 # add        r5        r4                
000_100_101 # ld        r4        r5                


#get d_in
110_001_010 # get        r1        2                
110_010_001 # get        r2        1                
011_001_010 # add        r1        r2                
011_001_010 # add        r1        r2                
000_010_001 # ld        r2        r1                
000_001_010 # ld        r1        r2                




110_001_001 # get        r1        1        
        #r1 is k = 1 start of for loop
for_loop:
110_010_010 # get        r2        2        
110_011_001 # get        r3        1        
011_010_011 # add        r2        r3        
011_010_011 # add        r2        r3
011_010_011 # add        r2        r3
011_010_011 # add        r2        r3
011_010_011 # add        r2        r3
000_011_010 # ld        r3        r2        
110_010_001 # get        r2        1        


if_loop:        
//d_in_corr[k] = !d_in[k]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_01 # shft        r2        1        1        
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
111_010_1_10 # shft        r2        1        2        
010_011_010 # xor        r3        r2                


else_loop:
//d_in_corr[k] = d_in[k]


110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_01 # shft        r2        1        1        
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
111_010_1_10 # shft        r2        1        2        
010_011_010 # xor        r3        r2                
end_else_loop:


011_001_010 # add        r1        r2        










        


#assign d_out_corr[11:5] = d_in_corr[15:9];
#get d_in_corr from memory
110_001_010 # get        r1        2                
000_010_001 # ld        r2        r1                
011_010_010 # add        r2        r2                
000_001_010 # ld        r1        r2                
#d_in_corr is in r1


110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
111_010_1_11 # shft        r2        1        3        
110_011_000 # get        r3        0                
010_011_010 # xor        r3        r2                
#d_out_corr[6] = d_in_corr[10]                
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_01 # shft        r2        1        1        
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
111_010_1_10 # shft        r2        1        2        
010_011_010 # xor        r3        r2                
#d_out_corr[7] = d_in_corr[11]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_10 # shft        r2        1        2        
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
111_010_1_01 # shft        r2        1        1        
010_011_010 # xor        r3        r2                
#d_out_corr[8] = d_in_corr[12]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_11 # shft        r2        1        3        
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
010_011_010 # xor        r3        r2                
110_010_010 # get        r2        2                
000_100_010 # ld        r4        r2                
110_101_001 # get        r5        1                
011_010_101 # add        r2        r5                
011_010_101 # add        r2        r5
011_010_101 # add        r2        r5
000_101_010 # ld        r5        r2                
011_100_101 # add        r4        r5                
sr        r3        r4                #store d_out_corr LSW into data mem[95]


#d_out_corr[9]= d_in_corr[13]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
110_011_000 # get        r3        0                
010_011_010 # xor        r3        r2                


#d_out_corr[10] = d_in_corr[14]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_10 # shft        r2        0        2        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_11 # shft        r2        0        3        
010_011_010 # xor        r3        r2                


#d_out_corr[11] = d_in_corr[15]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_01 # shft        r2        0        1        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_01 # shft        r2        0        1        
111_010_0_01 # shft        r2        0        1        
010_011_010 # xor        r3        r2                
110_010_010 # get        r2        2                
000_100_010 # ld        r4        r2                
110_101_001 # get        r5        1                
011_010_101 # add        r2        r5                
011_010_101 # add        r2        r5
000_101_010 # ld        r5        r2                
011_100_101 # add        r4        r5                
sr        r3        r4                #store d_out_corr MSW into data mem[94]


#assign d_out_corr[ 4:2] = d_in_corr[ 7:5];
#d_out_corr[2] = d_in_corr[5];
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_01 # shft        r2        0        1        
010_010_011 # xor        r2        r3                
#d_out_corr[3] = d_in_corr[6]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_10 # shft        r2        0        2        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_10 # shft        r2        0        2        
010_010_011 # xor        r2        r3                
#d_out_corr[4] = d_in_corr[7]
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_0_11 # shft        r2        0        3        
111_010_1_11 # shft        r2        1        3        
111_010_1_11 # shft        r2        1        3
111_010_1_01 # shft        r2        1        1
111_010_0_11 # shft        r2        0        3        
010_010_011 # xor        r2        r3                




#assign d_out_corr[   1] = d_in_corr[   3];
110_010_000 # get        r2        0                
010_010_001 # xor        r2        r1                
111_010_1_10 # shft        r2        1        2        
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
111_010_0_11 # shft        r2        0        3        
111_010_0_11 # shft        r2        0        3
111_010_0_01 # shft        r2        0        1
010_010_011 # xor        r2        r3                
110_010_010 # get        r2        2                
000_100_010 # ld        r4        r2                
110_101_001 # get        r5        1                
011_010_101 # add        r2        r5                
011_010_101 # add        r2        r5
011_010_101 # add        r2        r5
000_101_010 # ld        r5        r2                
011_100_101 # add        r4        r5                
sr        r3        r4                #store d_out_corr LSW into data mem[95]


110_110_010 # get        r6        2                
011_000_110 # add        r0        r6                
011_000_110 # add        r0        r6
110_101_010 # get        r5        2                
000_101_101 # ld        r5        r5                
010_101_000 # xor        r5        r0
101_101_000 # jnz        r5        r0                
